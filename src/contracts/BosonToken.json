{
    "contractName": "BosonToken",
    "abi": [{
            "inputs": [{
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "symbol",
                    "type": "string"
                },
                {
                    "internalType": "address",
                    "name": "_initialTokenOwner",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [{
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [{
                "indexed": false,
                "internalType": "address",
                "name": "account",
                "type": "address"
            }],
            "name": "Paused",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [{
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "previousAdminRole",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "newAdminRole",
                    "type": "bytes32"
                }
            ],
            "name": "RoleAdminChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [{
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "RoleGranted",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [{
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "RoleRevoked",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [{
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [{
                "indexed": false,
                "internalType": "address",
                "name": "account",
                "type": "address"
            }],
            "name": "Unpaused",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "DEFAULT_ADMIN_ROLE",
            "outputs": [{
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [{
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [],
            "name": "PAUSER_ROLE",
            "outputs": [{
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [],
            "name": "PERMIT_TYPEHASH",
            "outputs": [{
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [{
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [{
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [{
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [{
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [{
                "internalType": "address",
                "name": "",
                "type": "address"
            }],
            "name": "balanceOf",
            "outputs": [{
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [],
            "name": "chainId",
            "outputs": [{
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [{
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [{
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [{
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [{
                "internalType": "bytes32",
                "name": "role",
                "type": "bytes32"
            }],
            "name": "getRoleAdmin",
            "outputs": [{
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [{
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getRoleMember",
            "outputs": [{
                "internalType": "address",
                "name": "",
                "type": "address"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [{
                "internalType": "bytes32",
                "name": "role",
                "type": "bytes32"
            }],
            "name": "getRoleMemberCount",
            "outputs": [{
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [{
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "grantRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [{
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "hasRole",
            "outputs": [{
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [{
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [{
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [{
                "internalType": "string",
                "name": "",
                "type": "string"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [{
                "internalType": "address",
                "name": "",
                "type": "address"
            }],
            "name": "nonces",
            "outputs": [{
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [],
            "name": "paused",
            "outputs": [{
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [{
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256"
                },
                {
                    "internalType": "uint8",
                    "name": "v",
                    "type": "uint8"
                },
                {
                    "internalType": "bytes32",
                    "name": "r",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "s",
                    "type": "bytes32"
                }
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [{
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "renounceRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [{
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "revokeRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [{
                "internalType": "string",
                "name": "",
                "type": "string"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [{
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }],
            "stateMutability": "view",
            "type": "function",
            "constant": true
        },
        {
            "inputs": [{
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [{
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [{
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [{
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_initialTokenOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `value` as the allowance of `spender` over the caller's tokens.      * Returns a boolean value indicating whether the operation succeeded.      * Emits an {Approval} event.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems related to race condition      * Emits an {Approval} event indicating the updated allowance.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems related to race condition      * Emits an {Approval} event indicating the updated allowance.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval.      * Emits an {Approval} event.      * Requirements:      * - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}).      * For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `value` tokens from the caller's account to `recipient`.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `value` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{\"pause()\":{\"notice\":\"When Token contract is paused, no Token interactions are possible (e.g. approve, transfer, transferFrom or permit) Requirements:      * - Caller must have PAUSER_ROLE\"},\"unpause()\":{\"notice\":\"When Token contract is unpaused, all Token interactions can be executed (e.g. approve, transfer, transferFrom or permit) Requirements:      * - Caller must have PAUSER_ROLE\"}}}},\"settings\":{\"compilationTarget\":{\"/E/Ludo/Documents/Developpement/BosonPool/tokenX-contract/contracts/BosonToken.sol\":\"BosonToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/Ludo/Documents/Developpement/BosonPool/tokenX-contract/contracts/BosonToken.sol\":{\"keccak256\":\"0x25134fff417005a78455e94f015979bc454c22a5395e440f7c51c5bcf5e344fa\",\"urls\":[\"bzz-raw://23ae31856edc2327078a25bca8f122f935fc0fc47c0fa89e1fd7c7ec806383bf\",\"dweb:/ipfs/QmYcAUpHQ4coD34e9krrhHgyqS3BEZCQVreWQJyq1uLbhy\"]},\"/E/Ludo/Documents/Developpement/BosonPool/tokenX-contract/contracts/ERC20Permit.sol\":{\"keccak256\":\"0xf554e9f87e1b1164a1a01aed703edc1587a1b3ffb173346d0e4bab55ff5e31c0\",\"urls\":[\"bzz-raw://1ab86844e21cfb146e7349ad1a84b733ed9b7efcd02c21b72f62f4081ee4d043\",\"dweb:/ipfs/QmbNqCoPnXjYtxEbZF8WyDyncoS44xjA1wC5SQ24P6j62u\"]},\"/E/Ludo/Documents/Developpement/BosonPool/tokenX-contract/contracts/IERC20Permit.sol\":{\"keccak256\":\"0xea1b63cf48e1da41b6300473d60a014d980eb7e587033d5b9e5f2f4fd9613802\",\"urls\":[\"bzz-raw://f74971662dbad8c61871395599c0ef1f278fad6d89866e23274d269c8f37e3da\",\"dweb:/ipfs/QmdXtsZoBZR2YhPzjDFgT3aZTPg2bgPBBxqC9EP8H4nrWn\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4fc155a2f7837603d69a13cfa481eb5e7f5e02cb77e2ec9edbac30986db37988\",\"urls\":[\"bzz-raw://0855147e38b5e36288a8df73b8da49132f14ec7abb19041b0c98872263643aaa\",\"dweb:/ipfs/QmSrSysyFUYQq7hbJaJXG7EyZW6ezDBzEJx3SABp6eiJSS\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]}},\"version\":1}",
    "bytecode": "0x60806040523480156200001157600080fd5b5060405162001d5638038062001d56833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b506040526020908101516000805460ff1916905585519093508592508491620001c791600291850190620005c4565b508051620001dd906003906020840190620005c4565b50620001f16001600160e01b036200038116565b60015560405180605262001d04823960520190506040518091039020600260405180828054600181600116156101000203166002900480156200026e5780601f106200024b5761010080835404028352918201916200026e565b820191906000526020600020905b81548152906001019060200180831162000259575b50506040805191829003822082820182526001808452603160f81b60209485015254825180850197909752868301919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606087015260808601523060a0808701919091528151808703909101815260c09095019052835193019290922060075550620003209250600091506200031190506001600160e01b036200038616565b6001600160e01b036200038a16565b604080516a5041555345525f524f4c4560a81b8152905190819003600b0190206200035890620003116001600160e01b036200038616565b62000378816aa56fa5b99019a5c80000006001600160e01b03620003a316565b50505062000666565b465b90565b3390565b6200039f82826001600160e01b036200044c16565b5050565b620003bf81600454620004d060201b620010f31790919060201c565b6004556001600160a01b038216600090815260056020908152604090912054620003f4918390620010f3620004d0821b17901c565b6001600160a01b03831660008181526005602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828152600960209081526040909120620004739183906200133762000534821b17901c565b156200039f576200048c6001600160e01b036200038616565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828201838110156200052b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b60006200052b836001600160a01b0384166001600160e01b036200055416565b60006200056b83836001600160e01b03620005ac16565b620005a3575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200052e565b5060006200052e565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200060757805160ff191683800117855562000637565b8280016001018555821562000637579182015b82811115620006375782518255916020019190600101906200061a565b506200064592915062000649565b5090565b6200038391905b8082111562000645576000815560010162000650565b61168e80620006766000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80637ecebe00116100f9578063a457c2d711610097578063d505accf11610071578063d505accf14610503578063d547741f14610554578063dd62ed3e14610580578063e63ab1e9146105ae576101c4565b8063a457c2d71461048e578063a9059cbb146104ba578063ca15c873146104e6576101c4565b806391d14854116100d357806391d148541461044a57806395d89b41146104765780639a8a05921461047e578063a217fddf14610486576101c4565b80637ecebe00146103dd5780638456cb59146104035780639010d07c1461040b576101c4565b8063313ce567116101665780633950935111610140578063395093511461037b5780633f4ba83a146103a75780635c975abb146103af57806370a08231146103b7576101c4565b8063313ce567146103295780633644e5151461034757806336568abe1461034f576101c4565b806323b872dd116101a257806323b872dd146102a0578063248a9ca3146102d65780632f2ff15d146102f357806330adf81f14610321576101c4565b806306fdde03146101c9578063095ea7b31461024657806318160ddd14610286575b600080fd5b6101d16105b6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020b5781810151838201526020016101f3565b50505050905090810190601f1680156102385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102726004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610641565b604080519115158252519081900360200190f35b61028e6106a5565b60408051918252519081900360200190f35b610272600480360360608110156102b657600080fd5b506001600160a01b038135811691602081013590911690604001356106ab565b61028e600480360360208110156102ec57600080fd5b5035610794565b61031f6004803603604081101561030957600080fd5b50803590602001356001600160a01b03166107a9565b005b61028e610815565b610331610839565b6040805160ff9092168252519081900360200190f35b61028e61083e565b61031f6004803603604081101561036557600080fd5b50803590602001356001600160a01b0316610844565b6102726004803603604081101561039157600080fd5b506001600160a01b0381351690602001356108a5565b61031f6108e6565b610272610957565b61028e600480360360208110156103cd57600080fd5b50356001600160a01b0316610960565b61028e600480360360208110156103f357600080fd5b50356001600160a01b0316610972565b61031f610984565b61042e6004803603604081101561042157600080fd5b50803590602001356109f3565b604080516001600160a01b039092168252519081900360200190f35b6102726004803603604081101561046057600080fd5b50803590602001356001600160a01b0316610a18565b6101d1610a36565b61028e610a91565b61028e610a97565b610272600480360360408110156104a457600080fd5b506001600160a01b038135169060200135610a9c565b610272600480360360408110156104d057600080fd5b506001600160a01b038135169060200135610af1565b61028e600480360360208110156104fc57600080fd5b5035610b4b565b61031f600480360360e081101561051957600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610b62565b61031f6004803603604081101561056a57600080fd5b50803590602001356001600160a01b0316610dff565b61028e6004803603604081101561059657600080fd5b506001600160a01b0381358116916020013516610e58565b61028e610e75565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156106395780601f1061060e57610100808354040283529160200191610639565b820191906000526020600020905b81548152906001019060200180831161061c57829003601f168201915b505050505081565b600061064b610957565b15610690576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b61069b338484610e98565b5060015b92915050565b60045481565b60006106b5610957565b156106fa576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6001600160a01b03841660009081526006602090815260408083203384529091529020546000191461077f576001600160a01b038416600090815260066020908152604080832033845290915290205461075a908363ffffffff610efa16565b6001600160a01b03851660009081526006602090815260408083203384529091529020555b61078a848484610f57565b5060019392505050565b60009081526009602052604090206002015490565b6000828152600960205260409020600201546107cc906107c7611011565b610a18565b6108075760405162461bcd60e51b815260040180806020018281038252602f815260200180611514602f913960400191505060405180910390fd5b6108118282611015565b5050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60075481565b61084c611011565b6001600160a01b0316816001600160a01b03161461089b5760405162461bcd60e51b815260040180806020018281038252602f81526020018061162a602f913960400191505060405180910390fd5b6108118282611084565b3360008181526006602090815260408083206001600160a01b0387168452909152812054909161069b9185906108e1908663ffffffff6110f316565b610e98565b604080516a5041555345525f524f4c4560a81b8152905190819003600b019020610912906107c7611011565b61094d5760405162461bcd60e51b81526004018080602001828103825260398152602001806115436039913960400191505060405180910390fd5b61095561114d565b565b60005460ff1690565b60056020526000908152604090205481565b60086020526000908152604090205481565b604080516a5041555345525f524f4c4560a81b8152905190819003600b0190206109b0906107c7611011565b6109eb5760405162461bcd60e51b81526004018080602001828103825260378152602001806115ce6037913960400191505060405180910390fd5b6109556111ed565b6000828152600960205260408120610a11908363ffffffff61127016565b9392505050565b6000828152600960205260408120610a11908363ffffffff61127c16565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106395780601f1061060e57610100808354040283529160200191610639565b60015481565b600081565b600061069b33846108e185604051806060016040528060258152602001611605602591393360009081526006602090815260408083206001600160a01b038d168452909152902054919063ffffffff61129116565b6000610afb610957565b15610b40576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b61069b338484610f57565b600081815260096020526040812061069f90611328565b6000610b6c611333565b90506001548114610bba576040805162461bcd60e51b8152602060048201526013602482015272556e737570706f72746564206e6574776f726b60681b604482015290519081900360640190fd5b610bc2610957565b15610c07576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b42851015610c5c576040805162461bcd60e51b815260206004820152601860248201527f4552433230576974685065726d69743a20455850495245440000000000000000604482015290519081900360640190fd5b6007546001600160a01b03808a1660008181526008602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958e166060860152608085018d905260a085019590955260c08085018c90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff8a166101828501526101a284018990526101c28401889052519193926101e280820193601f1981019281900390910190855afa158015610d77573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610dad5750896001600160a01b0316816001600160a01b0316145b610de85760405162461bcd60e51b81526004018080602001828103825260228152602001806115ac6022913960400191505060405180910390fd5b610df38a8a8a610e98565b50505050505050505050565b600082815260096020526040902060020154610e1d906107c7611011565b61089b5760405162461bcd60e51b815260040180806020018281038252603081526020018061157c6030913960400191505060405180910390fd5b600660209081526000928352604080842090915290825290205481565b604080516a5041555345525f524f4c4560a81b8152905190819003600b01902081565b6001600160a01b03808416600081815260066020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600082821115610f51576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6001600160a01b038316600090815260056020526040902054610f80908263ffffffff610efa16565b6001600160a01b038085166000908152600560205260408082209390935590841681522054610fb5908263ffffffff6110f316565b6001600160a01b0380841660008181526005602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b3390565b6000828152600960205260409020611033908263ffffffff61133716565b1561081157611040611011565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526009602052604090206110a2908263ffffffff61134c16565b15610811576110af611011565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600082820183811015610a11576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b611155610957565b61119d576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6111d0611011565b604080516001600160a01b039092168252519081900360200190a1565b6111f5610957565b1561123a576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111d0611011565b6000610a118383611361565b6000610a11836001600160a01b0384166113c5565b600081848411156113205760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112e55781810151838201526020016112cd565b50505050905090810190601f1680156113125780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600061069f826113dd565b4690565b6000610a11836001600160a01b0384166113e1565b6000610a11836001600160a01b03841661142b565b815460009082106113a35760405162461bcd60e51b81526004018080602001828103825260228152602001806114f26022913960400191505060405180910390fd5b8260000182815481106113b257fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b60006113ed83836113c5565b6114235750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561069f565b50600061069f565b600081815260018301602052604081205480156114e7578354600019808301919081019060009087908390811061145e57fe5b906000526020600020015490508087600001848154811061147b57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806114ab57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061069f565b600091505061069f56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654552433230576974685065726d69743a20494e56414c49445f5349474e415455524545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220b31ffa60f871e2652e4e224fedb7dca9ce5a4db1a1e5c1b18dcf09ce6d2b004a64736f6c63430006060033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c80637ecebe00116100f9578063a457c2d711610097578063d505accf11610071578063d505accf14610503578063d547741f14610554578063dd62ed3e14610580578063e63ab1e9146105ae576101c4565b8063a457c2d71461048e578063a9059cbb146104ba578063ca15c873146104e6576101c4565b806391d14854116100d357806391d148541461044a57806395d89b41146104765780639a8a05921461047e578063a217fddf14610486576101c4565b80637ecebe00146103dd5780638456cb59146104035780639010d07c1461040b576101c4565b8063313ce567116101665780633950935111610140578063395093511461037b5780633f4ba83a146103a75780635c975abb146103af57806370a08231146103b7576101c4565b8063313ce567146103295780633644e5151461034757806336568abe1461034f576101c4565b806323b872dd116101a257806323b872dd146102a0578063248a9ca3146102d65780632f2ff15d146102f357806330adf81f14610321576101c4565b806306fdde03146101c9578063095ea7b31461024657806318160ddd14610286575b600080fd5b6101d16105b6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020b5781810151838201526020016101f3565b50505050905090810190601f1680156102385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102726004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610641565b604080519115158252519081900360200190f35b61028e6106a5565b60408051918252519081900360200190f35b610272600480360360608110156102b657600080fd5b506001600160a01b038135811691602081013590911690604001356106ab565b61028e600480360360208110156102ec57600080fd5b5035610794565b61031f6004803603604081101561030957600080fd5b50803590602001356001600160a01b03166107a9565b005b61028e610815565b610331610839565b6040805160ff9092168252519081900360200190f35b61028e61083e565b61031f6004803603604081101561036557600080fd5b50803590602001356001600160a01b0316610844565b6102726004803603604081101561039157600080fd5b506001600160a01b0381351690602001356108a5565b61031f6108e6565b610272610957565b61028e600480360360208110156103cd57600080fd5b50356001600160a01b0316610960565b61028e600480360360208110156103f357600080fd5b50356001600160a01b0316610972565b61031f610984565b61042e6004803603604081101561042157600080fd5b50803590602001356109f3565b604080516001600160a01b039092168252519081900360200190f35b6102726004803603604081101561046057600080fd5b50803590602001356001600160a01b0316610a18565b6101d1610a36565b61028e610a91565b61028e610a97565b610272600480360360408110156104a457600080fd5b506001600160a01b038135169060200135610a9c565b610272600480360360408110156104d057600080fd5b506001600160a01b038135169060200135610af1565b61028e600480360360208110156104fc57600080fd5b5035610b4b565b61031f600480360360e081101561051957600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610b62565b61031f6004803603604081101561056a57600080fd5b50803590602001356001600160a01b0316610dff565b61028e6004803603604081101561059657600080fd5b506001600160a01b0381358116916020013516610e58565b61028e610e75565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156106395780601f1061060e57610100808354040283529160200191610639565b820191906000526020600020905b81548152906001019060200180831161061c57829003601f168201915b505050505081565b600061064b610957565b15610690576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b61069b338484610e98565b5060015b92915050565b60045481565b60006106b5610957565b156106fa576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6001600160a01b03841660009081526006602090815260408083203384529091529020546000191461077f576001600160a01b038416600090815260066020908152604080832033845290915290205461075a908363ffffffff610efa16565b6001600160a01b03851660009081526006602090815260408083203384529091529020555b61078a848484610f57565b5060019392505050565b60009081526009602052604090206002015490565b6000828152600960205260409020600201546107cc906107c7611011565b610a18565b6108075760405162461bcd60e51b815260040180806020018281038252602f815260200180611514602f913960400191505060405180910390fd5b6108118282611015565b5050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60075481565b61084c611011565b6001600160a01b0316816001600160a01b03161461089b5760405162461bcd60e51b815260040180806020018281038252602f81526020018061162a602f913960400191505060405180910390fd5b6108118282611084565b3360008181526006602090815260408083206001600160a01b0387168452909152812054909161069b9185906108e1908663ffffffff6110f316565b610e98565b604080516a5041555345525f524f4c4560a81b8152905190819003600b019020610912906107c7611011565b61094d5760405162461bcd60e51b81526004018080602001828103825260398152602001806115436039913960400191505060405180910390fd5b61095561114d565b565b60005460ff1690565b60056020526000908152604090205481565b60086020526000908152604090205481565b604080516a5041555345525f524f4c4560a81b8152905190819003600b0190206109b0906107c7611011565b6109eb5760405162461bcd60e51b81526004018080602001828103825260378152602001806115ce6037913960400191505060405180910390fd5b6109556111ed565b6000828152600960205260408120610a11908363ffffffff61127016565b9392505050565b6000828152600960205260408120610a11908363ffffffff61127c16565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106395780601f1061060e57610100808354040283529160200191610639565b60015481565b600081565b600061069b33846108e185604051806060016040528060258152602001611605602591393360009081526006602090815260408083206001600160a01b038d168452909152902054919063ffffffff61129116565b6000610afb610957565b15610b40576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b61069b338484610f57565b600081815260096020526040812061069f90611328565b6000610b6c611333565b90506001548114610bba576040805162461bcd60e51b8152602060048201526013602482015272556e737570706f72746564206e6574776f726b60681b604482015290519081900360640190fd5b610bc2610957565b15610c07576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b42851015610c5c576040805162461bcd60e51b815260206004820152601860248201527f4552433230576974685065726d69743a20455850495245440000000000000000604482015290519081900360640190fd5b6007546001600160a01b03808a1660008181526008602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958e166060860152608085018d905260a085019590955260c08085018c90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff8a166101828501526101a284018990526101c28401889052519193926101e280820193601f1981019281900390910190855afa158015610d77573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610dad5750896001600160a01b0316816001600160a01b0316145b610de85760405162461bcd60e51b81526004018080602001828103825260228152602001806115ac6022913960400191505060405180910390fd5b610df38a8a8a610e98565b50505050505050505050565b600082815260096020526040902060020154610e1d906107c7611011565b61089b5760405162461bcd60e51b815260040180806020018281038252603081526020018061157c6030913960400191505060405180910390fd5b600660209081526000928352604080842090915290825290205481565b604080516a5041555345525f524f4c4560a81b8152905190819003600b01902081565b6001600160a01b03808416600081815260066020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600082821115610f51576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6001600160a01b038316600090815260056020526040902054610f80908263ffffffff610efa16565b6001600160a01b038085166000908152600560205260408082209390935590841681522054610fb5908263ffffffff6110f316565b6001600160a01b0380841660008181526005602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b3390565b6000828152600960205260409020611033908263ffffffff61133716565b1561081157611040611011565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526009602052604090206110a2908263ffffffff61134c16565b15610811576110af611011565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600082820183811015610a11576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b611155610957565b61119d576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6111d0611011565b604080516001600160a01b039092168252519081900360200190a1565b6111f5610957565b1561123a576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111d0611011565b6000610a118383611361565b6000610a11836001600160a01b0384166113c5565b600081848411156113205760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112e55781810151838201526020016112cd565b50505050905090810190601f1680156113125780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600061069f826113dd565b4690565b6000610a11836001600160a01b0384166113e1565b6000610a11836001600160a01b03841661142b565b815460009082106113a35760405162461bcd60e51b81526004018080602001828103825260228152602001806114f26022913960400191505060405180910390fd5b8260000182815481106113b257fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b60006113ed83836113c5565b6114235750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561069f565b50600061069f565b600081815260018301602052604081205480156114e7578354600019808301919081019060009087908390811061145e57fe5b906000526020600020015490508087600001848154811061147b57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806114ab57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061069f565b600091505061069f56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654552433230576974685065726d69743a20494e56414c49445f5349474e415455524545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220b31ffa60f871e2652e4e224fedb7dca9ce5a4db1a1e5c1b18dcf09ce6d2b004a64736f6c63430006060033",
    "sourceMap": "164:1379:0:-:0;;;347:327;5:9:-1;2:2;;;27:1;24;17:12;2:2;347:327:0;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;347:327:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;347:327:0;;420:4:-1;411:14;;;;347:327:0;;;;;411:14:-1;347:327:0;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;347:327:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;347:327:0;;420:4:-1;411:14;;;;347:327:0;;;;;411:14:-1;347:327:0;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;347:327:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;347:327:0;;;;;;;945:5:9;935:15;;-1:-1:-1;;935:15:9;;;1649:12:1;;347:327:0;;-1:-1:-1;482:4:0;;-1:-1:-1;488:6:0;;1649:12:1;;:4;;:12;;;;:::i;:::-;-1:-1:-1;1672:16:1;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;1711:12:1;-1:-1:-1;;;;;1711:10:1;:12;:::i;:::-;1701:7;:22;1808:135;;;;;;;;;;;;;;;;;;1978:4;1962:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1962:22:1;;;;;;;;;2013:10;;;;;;;;;-1:-1:-1;;;2013:10:1;;;;;2043:7;1779:318;;;;;;;;;;;;;;;;2003:21;1779:318;;;;;;;;2077:4;1779:318;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1779:318:1;;;;;;1755:353;;;;;;;;1736:16;:372;-1:-1:-1;507:44:0::1;::::0;-1:-1:-1;;;;538:12:0::1;::::0;-1:-1:-1;;;;;;538:10:0::1;:12:::0;:::i:1;:::-;-1:-1:-1::0;;;;;507:10:0::1;:44:::0;:::i:1;:::-;259:24;::::0;;-1:-1:-1;;;259:24:0;;;;;;;;::::1;::::0;;;562:37:::1;::::0;586:12:::1;-1:-1:-1::0;;;;;586:10:0::1;:12:::0;:::i:1;562:37::-;612:54;618:18:::0;638:27;-1:-1:-1;;;;;612:5:0::1;:54:::0;:::i:1;:::-;347:327:::0;;;164:1379;;2124:230:1;2298:9;2124:230;;:::o;598:104:7:-;685:10;598:104;:::o;6588:110:4:-;6666:25;6677:4;6683:7;-1:-1:-1;;;;;6666:10:4;:25;:::i;:::-;6588:110;;:::o;2549:204:1:-;2625:22;2641:5;2625:11;;:15;;;;;;:22;;;;:::i;:::-;2611:11;:36;-1:-1:-1;;;;;2674:13:1;;;;;;:9;:13;;;;;;;;;:24;;2692:5;;2674:17;;;;;:24;;:::i;:::-;-1:-1:-1;;;;;2658:13:1;;;;;;:9;:13;;;;;;;;:40;;;;2714:31;;;;;;;2658:13;;;;2714:31;;;;;;;;;;2549:204;;:::o;7025:184:4:-;7098:12;;;;:6;:12;;;;;;;;:33;;7123:7;;7098:24;;;;;:33;;:::i;:::-;7094:109;;;7179:12;-1:-1:-1;;;;;7179:10:4;:12;:::i;:::-;-1:-1:-1;;;;;7152:40:4;7170:7;-1:-1:-1;;;;;7152:40:4;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;2690:175:5:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;-1:-1:-1;2690:175:5;;;;;:::o;6429:150:8:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:8;;-1:-1:-1;;;;;6522:4:8;:50;:::i;1640:404::-;1703:4;1724:21;1734:3;1739:5;-1:-1:-1;;;;;1724:9:8;:21;:::i;:::-;1719:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1761:11:8;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:8;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;164:1379:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;164:1379:0;;;-1:-1:-1;164:1379:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "164:1379:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;164:1379:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;332:27:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;332:27:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4440:214;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4440:214:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;510:35;;;:::i;:::-;;;;;;;;;;;;;;;;6720:396;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6720:396:1;;;;;;;;;;;;;;;;;:::i;4282:112:4:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4282:112:4;;:::i;4644:223::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4644:223:4;;;;;;-1:-1:-1;;;;;4644:223:4;;:::i;:::-;;1014:126:1;;;:::i;457:44::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;844:40;;;:::i;5818:205:4:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5818:205:4;;;;;;-1:-1:-1;;;;;5818:205:4;;:::i;4972:294:1:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4972:294:1;;;;;;;;:::i;1333:207:0:-;;;:::i;1052:84:9:-;;;:::i;552:53:1:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;552:53:1;-1:-1:-1;;;;;552:53:1;;:::i;1147:50::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1147:50:1;-1:-1:-1;;;;;1147:50:1;;:::i;900:201:0:-;;;:::i;3965:136:4:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3965:136:4;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3965:136:4;;;;;;;;;;;;;;2950:137;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2950:137:4;;;;;;-1:-1:-1;;;;;2950:137:4;;:::i;366:29:1:-;;;:::i;301:22::-;;;:::i;1727:49:4:-;;;:::i;5584:394:1:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5584:394:1;;;;;;;;:::i;6206:206::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6206:206:1;;;;;;;;:::i;3255:125:4:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3255:125:4;;:::i;7805:1174:1:-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;;7805:1174:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5101:226:4:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5101:226:4;;;;;;-1:-1:-1;;;;;5101:226:4;;:::i;612:73:1:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;612:73:1;;;;;;;;;;:::i;221:62:0:-;;;:::i;332:27:1:-;;;;;;;;;;;;;;-1:-1:-1;;332:27:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4440:214::-;4566:4;1366:8:9;:6;:8::i;:::-;1365:9;1357:38;;;;;-1:-1:-1;;;1357:38:9;;;;;;;;;;;;-1:-1:-1;;;1357:38:9;;;;;;;;;;;;;;;4588:36:1::1;4597:10;4609:7;4618:5;4588:8;:36::i;:::-;-1:-1:-1::0;4642:4:1::1;1405:1:9;4440:214:1::0;;;;:::o;510:35::-;;;;:::o;6720:396::-;6858:4;1366:8:9;:6;:8::i;:::-;1365:9;1357:38;;;;;-1:-1:-1;;;1357:38:9;;;;;;;;;;;;-1:-1:-1;;;1357:38:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;6879:15:1;::::1;;::::0;;;:9:::1;:15;::::0;;;;;;;6895:10:::1;6879:27:::0;;;;;;;;-1:-1:-1;;6879:42:1::1;6875:175;;-1:-1:-1::0;;;;;6968:15:1;::::1;;::::0;;;:9:::1;:15;::::0;;;;;;;6984:10:::1;6968:27:::0;;;;;;;;:70:::1;::::0;7018:5;6968:70:::1;:31;:70;:::i;:::-;-1:-1:-1::0;;;;;6938:15:1;::::1;;::::0;;;:9:::1;:15;::::0;;;;;;;6954:10:::1;6938:27:::0;;;;;;;:100;6875:175:::1;7060:26;7070:4;7076:2;7080:5;7060:9;:26::i;:::-;-1:-1:-1::0;7104:4:1::1;6720:396:::0;;;;;:::o;4282:112:4:-;4339:7;4365:12;;;:6;:12;;;;;:22;;;;4282:112::o;4644:223::-;4735:12;;;;:6;:12;;;;;:22;;;4727:45;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;-1:-1:-1;;;4719:105:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:25;4846:4;4852:7;4835:10;:25::i;:::-;4644:223;;:::o;1014:126:1:-;1074:66;1014:126;:::o;457:44::-;499:2;457:44;:::o;844:40::-;;;;:::o;5818:205:4:-;5915:12;:10;:12::i;:::-;-1:-1:-1;;;;;5904:23:4;:7;-1:-1:-1;;;;;5904:23:4;;5896:83;;;;-1:-1:-1;;;5896:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5990:26;6002:4;6008:7;5990:11;:26::i;4972:294:1:-;5132:10;5087:4;5179:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;5179:30:1;;;;;;;;;;5087:4;;5109:127;;5157:7;;5179:46;;5214:10;5179:46;:34;:46;:::i;:::-;5109:8;:127::i;1333:207:0:-;259:24;;;-1:-1:-1;;;259:24:0;;;;;;;;;;;;1392:34;;1413:12;:10;:12::i;1392:34::-;1370:141;;;;-1:-1:-1;;;1370:141:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1522:10;:8;:10::i;:::-;1333:207::o;1052:84:9:-;1099:4;1122:7;;;1052:84;:::o;552:53:1:-;;;;;;;;;;;;;:::o;1147:50::-;;;;;;;;;;;;;:::o;900:201:0:-;259:24;;;-1:-1:-1;;;259:24:0;;;;;;;;;;;;957:34;;978:12;:10;:12::i;957:34::-;935:139;;;;-1:-1:-1;;;935:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:8;:6;:8::i;3965:136:4:-;4038:7;4064:12;;;:6;:12;;;;;:30;;4088:5;4064:30;:23;:30;:::i;:::-;4057:37;3965:136;-1:-1:-1;;;3965:136:4:o;2950:137::-;3019:4;3042:12;;;:6;:12;;;;;:38;;3072:7;3042:38;:29;:38;:::i;366:29:1:-;;;;;;;;;;;;;;;-1:-1:-1;;366:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:22;;;;:::o;1727:49:4:-;1772:4;1727:49;:::o;5584:394:1:-;5704:4;5726:222;5749:10;5774:7;5796:141;5849:15;5796:141;;;;;;;;;;;;;;;;;5806:10;5796:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;5796:30:1;;;;;;;;;;;:141;;:34;:141;:::i;6206:206::-;6328:4;1366:8:9;:6;:8::i;:::-;1365:9;1357:38;;;;;-1:-1:-1;;;1357:38:9;;;;;;;;;;;;-1:-1:-1;;;1357:38:9;;;;;;;;;;;;;;;6350:32:1::1;6360:10;6372:2;6376:5;6350:9;:32::i;3255:125:4:-:0;3318:7;3344:12;;;:6;:12;;;;;:29;;:27;:29::i;7805:1174:1:-;1448:19;1470:12;:10;:12::i;:::-;1448:34;;1516:7;;1501:11;:22;1493:54;;;;;-1:-1:-1;;;1493:54:1;;;;;;;;;;;;-1:-1:-1;;;1493:54:1;;;;;;;;;;;;;;;1366:8:9::1;:6;:8::i;:::-;1365:9;1357:38;;;::::0;;-1:-1:-1;;;1357:38:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1357:38:9;;;;;;;;;;;;;::::1;;8110:15:1::2;8098:8;:27;;8090:64;;;::::0;;-1:-1:-1;;;8090:64:1;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;8297:16;::::0;-1:-1:-1;;;;;8569:13:1;;::::2;8167:14;8569:13:::0;;;:6:::2;:13;::::0;;;;;;;:15;;::::2;::::0;;::::2;::::0;;;8372:278;;1074:66:::2;8372:278:::0;;::::2;::::0;;;;;;;;;;::::2;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;8372:278:1;;;;;8336:337;;;;::::2;::::0;-1:-1:-1;;;8225:467:1;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;8225:467:1;;;;;;8197:510;;;;::::2;::::0;;;;8747:26;;;;;;;;;;;;;::::2;::::0;::::2;::::0;;;;;;;;;;;;;;;;;8167:14;;8569:15;8747:26;;;;;-1:-1:-1;;8747:26:1;;;;;;;;;;8569:15;8747:26:::2;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;-1:-1:::0;;8747:26:1::2;::::0;-1:-1:-1;;8747:26:1;;;-1:-1:-1;;;;;;;8806:30:1;::::2;::::0;;::::2;::::0;:59:::2;;;8860:5;-1:-1:-1::0;;;;;8840:25:1::2;:16;-1:-1:-1::0;;;;;8840:25:1::2;;8806:59;8784:143;;;;-1:-1:-1::0;;;8784:143:1::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8940:31;8949:5;8956:7;8965:5;8940:8;:31::i;:::-;1405:1:9;;7805:1174:1::0;;;;;;;;:::o;5101:226:4:-;5193:12;;;;:6;:12;;;;;:22;;;5185:45;;5217:12;:10;:12::i;5185:45::-;5177:106;;;;-1:-1:-1;;;5177:106:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;612:73:1;;;;;;;;;;;;;;;;;;;;;;;;:::o;221:62:0:-;259:24;;;-1:-1:-1;;;259:24:0;;;;;;;;;;;;221:62;:::o;3457:206:1:-;-1:-1:-1;;;;;3575:16:1;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;3624:31;;;;;;;;;;;;;;;;;3457:206;;;:::o;3136:155:5:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:5;;;3136:155::o;3948:257:1:-;-1:-1:-1;;;;;4079:15:1;;;;;;:9;:15;;;;;;:26;;4099:5;4079:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;4061:15:1;;;;;;;:9;:15;;;;;;:44;;;;4132:13;;;;;;;:24;;4150:5;4132:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;4116:13:1;;;;;;;:9;:13;;;;;;;;;:40;;;;4172:25;;;;;;;4116:13;;4172:25;;;;;;;;;;;;;3948:257;;;:::o;598:104:7:-;685:10;598:104;:::o;7025:184:4:-;7098:12;;;;:6;:12;;;;;:33;;7123:7;7098:33;:24;:33;:::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;-1:-1:-1;;;;;7152:40:4;7170:7;-1:-1:-1;;;;;7152:40:4;7164:4;7152:40;;;;;;;;;;7025:184;;:::o;7215:188::-;7289:12;;;;:6;:12;;;;;:36;;7317:7;7289:36;:27;:36;:::i;:::-;7285:112;;;7373:12;:10;:12::i;:::-;-1:-1:-1;;;;;7346:40:4;7364:7;-1:-1:-1;;;;;7346:40:4;7358:4;7346:40;;;;;;;;;;7215:188;;:::o;2690:175:5:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;2064:117:9;1631:8;:6;:8::i;:::-;1623:41;;;;;-1:-1:-1;;;1623:41:9;;;;;;;;;;;;-1:-1:-1;;;1623:41:9;;;;;;;;;;;;;;;2132:5:::1;2122:15:::0;;-1:-1:-1;;2122:15:9::1;::::0;;2152:22:::1;2161:12;:10;:12::i;:::-;2152:22;::::0;;-1:-1:-1;;;;;2152:22:9;;::::1;::::0;;;;;;;::::1;::::0;;::::1;2064:117::o:0;1817:115::-;1366:8;:6;:8::i;:::-;1365:9;1357:38;;;;;-1:-1:-1;;;1357:38:9;;;;;;;;;;;;-1:-1:-1;;;1357:38:9;;;;;;;;;;;;;;;1876:7:::1;:14:::0;;-1:-1:-1;;1876:14:9::1;1886:4;1876:14;::::0;;1905:20:::1;1912:12;:10;:12::i;7677:156:8:-:0;7751:7;7801:22;7805:3;7817:5;7801:3;:22::i;6984:165::-;7064:4;7087:55;7097:3;-1:-1:-1;;;;;7117:23:8;;7087:9;:55::i;5432:163:5:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5537:29:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:5;;;5432:163::o;7230:115:8:-;7293:7;7319:19;7327:3;7319:7;:19::i;2124:230:1:-;2298:9;2124:230;:::o;6429:150:8:-;6499:4;6522:50;6527:3;-1:-1:-1;;;;;6547:23:8;;6522:4;:50::i;6747:156::-;6820:4;6843:53;6851:3;-1:-1:-1;;;;;6871:23:8;;6843:7;:53::i;4452:201::-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:8;;;;-1:-1:-1;;;4538:73:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;3805:127::-;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;4013:107::-;4095:18;;4013:107::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1761:11:8;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:8;2015:12;;2212:1512;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:8;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;",
    "source": "// SPDX-License-Identifier: LGPL-3.0-or-later\r\npragma solidity 0.6.6;\r\n\r\nimport \"./ERC20Permit.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\ncontract BosonToken is ERC20Permit, AccessControl {\r\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\r\n    uint256 private constant ONE_MILLION = 1 * 10**6;\r\n\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        address _initialTokenOwner\r\n    ) public ERC20Permit(name, symbol) {\r\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n        _setupRole(PAUSER_ROLE, _msgSender());\r\n\r\n        _mint(_initialTokenOwner, 200 * ONE_MILLION * 1 ether);\r\n    }\r\n\r\n    /**\r\n     * @notice When Token contract is paused, no Token interactions are possible (e.g. approve, transfer, transferFrom or permit)\r\n     * Requirements:\r\n     *\r\n     * - Caller must have PAUSER_ROLE\r\n     */\r\n    function pause() public {\r\n        require(\r\n            hasRole(PAUSER_ROLE, _msgSender()),\r\n            \"ERC20PresetMinterPauser: must have pauser role to pause\"\r\n        );\r\n        _pause();\r\n    }\r\n\r\n    /**\r\n     * @notice When Token contract is unpaused, all Token interactions can be executed (e.g. approve, transfer, transferFrom or permit)\r\n     * Requirements:\r\n     *\r\n     * - Caller must have PAUSER_ROLE\r\n     */\r\n    function unpause() public {\r\n        require(\r\n            hasRole(PAUSER_ROLE, _msgSender()),\r\n            \"ERC20PresetMinterPauser: must have pauser role to unpause\"\r\n        );\r\n        _unpause();\r\n    }\r\n}\r\n",
    "sourcePath": "E:/Ludo/Documents/Developpement/BosonPool/tokenX-contract/contracts/BosonToken.sol",
    "ast": {
        "absolutePath": "/E/Ludo/Documents/Developpement/BosonPool/tokenX-contract/contracts/BosonToken.sol",
        "exportedSymbols": {
            "BosonToken": [
                89
            ]
        },
        "id": 90,
        "nodeType": "SourceUnit",
        "nodes": [{
                "id": 1,
                "literals": [
                    "solidity",
                    "0.6",
                    ".6"
                ],
                "nodeType": "PragmaDirective",
                "src": "47:22:0"
            },
            {
                "absolutePath": "/E/Ludo/Documents/Developpement/BosonPool/tokenX-contract/contracts/ERC20Permit.sol",
                "file": "./ERC20Permit.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 90,
                "sourceUnit": 614,
                "src": "73:27:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
                "file": "@openzeppelin/contracts/access/AccessControl.sol",
                "id": 3,
                "nodeType": "ImportDirective",
                "scope": 90,
                "sourceUnit": 1087,
                "src": "102:58:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [{
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 4,
                            "name": "ERC20Permit",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 613,
                            "src": "187:11:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Permit_$613",
                                "typeString": "contract ERC20Permit"
                            }
                        },
                        "id": 5,
                        "nodeType": "InheritanceSpecifier",
                        "src": "187:11:0"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 6,
                            "name": "AccessControl",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1086,
                            "src": "200:13:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AccessControl_$1086",
                                "typeString": "contract AccessControl"
                            }
                        },
                        "id": 7,
                        "nodeType": "InheritanceSpecifier",
                        "src": "200:13:0"
                    }
                ],
                "contractDependencies": [
                    613,
                    746,
                    1086,
                    1760,
                    2344
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": true,
                "id": 89,
                "linearizedBaseContracts": [
                    89,
                    1086,
                    613,
                    2344,
                    1760,
                    746
                ],
                "name": "BosonToken",
                "nodeType": "ContractDefinition",
                "nodes": [{
                        "constant": true,
                        "functionSelector": "e63ab1e9",
                        "id": 12,
                        "mutability": "constant",
                        "name": "PAUSER_ROLE",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 89,
                        "src": "221:62:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                        },
                        "typeName": {
                            "id": 8,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "221:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        },
                        "value": {
                            "argumentTypes": null,
                            "arguments": [{
                                "argumentTypes": null,
                                "hexValue": "5041555345525f524f4c45",
                                "id": 10,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "269:13:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                                    "typeString": "literal_string \"PAUSER_ROLE\""
                                },
                                "value": "PAUSER_ROLE"
                            }],
                            "expression": {
                                "argumentTypes": [{
                                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                                    "typeString": "literal_string \"PAUSER_ROLE\""
                                }],
                                "id": 9,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "259:9:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                            },
                            "id": 11,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "259:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": true,
                        "id": 19,
                        "mutability": "constant",
                        "name": "ONE_MILLION",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 89,
                        "src": "290:48:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 13,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "290:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": {
                            "argumentTypes": null,
                            "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                            },
                            "id": 18,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 14,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "329:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                },
                                "value": "1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                },
                                "id": 17,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 15,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "333:2:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "36",
                                    "id": 16,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "337:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_6_by_1",
                                        "typeString": "int_const 6"
                                    },
                                    "value": "6"
                                },
                                "src": "333:5:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                }
                            },
                            "src": "329:9:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "body": {
                            "id": 53,
                            "nodeType": "Block",
                            "src": "496:178:0",
                            "statements": [{
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [{
                                                "argumentTypes": null,
                                                "id": 33,
                                                "name": "DEFAULT_ADMIN_ROLE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 829,
                                                "src": "518:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 34,
                                                    "name": "_msgSender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1748,
                                                    "src": "538:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                        "typeString": "function () view returns (address payable)"
                                                    }
                                                },
                                                "id": 35,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "538:12:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [{
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            ],
                                            "id": 32,
                                            "name": "_setupRole",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1012,
                                            "src": "507:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                                "typeString": "function (bytes32,address)"
                                            }
                                        },
                                        "id": 36,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "507:44:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 37,
                                    "nodeType": "ExpressionStatement",
                                    "src": "507:44:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [{
                                                "argumentTypes": null,
                                                "id": 39,
                                                "name": "PAUSER_ROLE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12,
                                                "src": "573:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 40,
                                                    "name": "_msgSender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1748,
                                                    "src": "586:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                        "typeString": "function () view returns (address payable)"
                                                    }
                                                },
                                                "id": 41,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "586:12:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [{
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            ],
                                            "id": 38,
                                            "name": "_setupRole",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1012,
                                            "src": "562:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                                "typeString": "function (bytes32,address)"
                                            }
                                        },
                                        "id": 42,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "562:37:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 43,
                                    "nodeType": "ExpressionStatement",
                                    "src": "562:37:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [{
                                                "argumentTypes": null,
                                                "id": 45,
                                                "name": "_initialTokenOwner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25,
                                                "src": "618:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 50,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 48,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "argumentTypes": null,
                                                        "hexValue": "323030",
                                                        "id": 46,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "638:3:0",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_200_by_1",
                                                            "typeString": "int_const 200"
                                                        },
                                                        "value": "200"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "*",
                                                    "rightExpression": {
                                                        "argumentTypes": null,
                                                        "id": 47,
                                                        "name": "ONE_MILLION",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 19,
                                                        "src": "644:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "638:17:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "31",
                                                    "id": 49,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "658:7:0",
                                                    "subdenomination": "ether",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                        "typeString": "int_const 1000000000000000000"
                                                    },
                                                    "value": "1"
                                                },
                                                "src": "638:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [{
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 44,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 269,
                                            "src": "612:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 51,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "612:54:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 52,
                                    "nodeType": "ExpressionStatement",
                                    "src": "612:54:0"
                                }
                            ]
                        },
                        "documentation": null,
                        "id": 54,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [{
                            "arguments": [{
                                    "argumentTypes": null,
                                    "id": 28,
                                    "name": "name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21,
                                    "src": "482:4:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                    }
                                },
                                {
                                    "argumentTypes": null,
                                    "id": 29,
                                    "name": "symbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23,
                                    "src": "488:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                    }
                                }
                            ],
                            "id": 30,
                            "modifierName": {
                                "argumentTypes": null,
                                "id": 27,
                                "name": "ERC20Permit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 613,
                                "src": "470:11:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20Permit_$613_$",
                                    "typeString": "type(contract ERC20Permit)"
                                }
                            },
                            "nodeType": "ModifierInvocation",
                            "src": "470:25:0"
                        }],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "overrides": null,
                        "parameters": {
                            "id": 26,
                            "nodeType": "ParameterList",
                            "parameters": [{
                                    "constant": false,
                                    "id": 21,
                                    "mutability": "mutable",
                                    "name": "name",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 54,
                                    "src": "369:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 20,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "369:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 23,
                                    "mutability": "mutable",
                                    "name": "symbol",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 54,
                                    "src": "398:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 22,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "398:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 25,
                                    "mutability": "mutable",
                                    "name": "_initialTokenOwner",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 54,
                                    "src": "429:26:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 24,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "429:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "358:104:0"
                        },
                        "returnParameters": {
                            "id": 31,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "496:0:0"
                        },
                        "scope": 89,
                        "src": "347:327:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 70,
                            "nodeType": "Block",
                            "src": "924:177:0",
                            "statements": [{
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [{
                                                "argumentTypes": null,
                                                "arguments": [{
                                                        "argumentTypes": null,
                                                        "id": 60,
                                                        "name": "PAUSER_ROLE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 12,
                                                        "src": "965:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 61,
                                                            "name": "_msgSender",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1748,
                                                            "src": "978:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                                "typeString": "function () view returns (address payable)"
                                                            }
                                                        },
                                                        "id": 62,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "978:12:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [{
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "id": 59,
                                                    "name": "hasRole",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 875,
                                                    "src": "957:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                                        "typeString": "function (bytes32,address) view returns (bool)"
                                                    }
                                                },
                                                "id": 63,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "957:34:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365",
                                                "id": 64,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1006:57:0",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
                                                    "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
                                                },
                                                "value": "ERC20PresetMinterPauser: must have pauser role to pause"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [{
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
                                                    "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
                                                }
                                            ],
                                            "id": 58,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [-18, -18],
                                            "referencedDeclaration": -18,
                                            "src": "935:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 65,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "935:139:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 66,
                                    "nodeType": "ExpressionStatement",
                                    "src": "935:139:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 67,
                                            "name": "_pause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2327,
                                            "src": "1085:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 68,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1085:8:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 69,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1085:8:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 55,
                            "nodeType": "StructuredDocumentation",
                            "src": "682:212:0",
                            "text": "@notice When Token contract is paused, no Token interactions are possible (e.g. approve, transfer, transferFrom or permit)\nRequirements:\n\n     * - Caller must have PAUSER_ROLE"
                        },
                        "functionSelector": "8456cb59",
                        "id": 71,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "pause",
                        "nodeType": "FunctionDefinition",
                        "overrides": null,
                        "parameters": {
                            "id": 56,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "914:2:0"
                        },
                        "returnParameters": {
                            "id": 57,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "924:0:0"
                        },
                        "scope": 89,
                        "src": "900:201:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 87,
                            "nodeType": "Block",
                            "src": "1359:181:0",
                            "statements": [{
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [{
                                                "argumentTypes": null,
                                                "arguments": [{
                                                        "argumentTypes": null,
                                                        "id": 77,
                                                        "name": "PAUSER_ROLE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 12,
                                                        "src": "1400:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 78,
                                                            "name": "_msgSender",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1748,
                                                            "src": "1413:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                                "typeString": "function () view returns (address payable)"
                                                            }
                                                        },
                                                        "id": 79,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1413:12:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [{
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "id": 76,
                                                    "name": "hasRole",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 875,
                                                    "src": "1392:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                                        "typeString": "function (bytes32,address) view returns (bool)"
                                                    }
                                                },
                                                "id": 80,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1392:34:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                                                "id": 81,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1441:59:0",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
                                                    "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
                                                },
                                                "value": "ERC20PresetMinterPauser: must have pauser role to unpause"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [{
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
                                                    "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
                                                }
                                            ],
                                            "id": 75,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [-18, -18],
                                            "referencedDeclaration": -18,
                                            "src": "1370:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 82,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1370:141:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 83,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1370:141:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 84,
                                            "name": "_unpause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2343,
                                            "src": "1522:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 85,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1522:10:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 86,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1522:10:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 72,
                            "nodeType": "StructuredDocumentation",
                            "src": "1109:218:0",
                            "text": "@notice When Token contract is unpaused, all Token interactions can be executed (e.g. approve, transfer, transferFrom or permit)\nRequirements:\n\n     * - Caller must have PAUSER_ROLE"
                        },
                        "functionSelector": "3f4ba83a",
                        "id": 88,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "unpause",
                        "nodeType": "FunctionDefinition",
                        "overrides": null,
                        "parameters": {
                            "id": 73,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1349:2:0"
                        },
                        "returnParameters": {
                            "id": 74,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1359:0:0"
                        },
                        "scope": 89,
                        "src": "1333:207:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 90,
                "src": "164:1379:0"
            }
        ],
        "src": "47:1498:0"
    },
    "legacyAST": {
        "absolutePath": "/E/Ludo/Documents/Developpement/BosonPool/tokenX-contract/contracts/BosonToken.sol",
        "exportedSymbols": {
            "BosonToken": [
                89
            ]
        },
        "id": 90,
        "nodeType": "SourceUnit",
        "nodes": [{
                "id": 1,
                "literals": [
                    "solidity",
                    "0.6",
                    ".6"
                ],
                "nodeType": "PragmaDirective",
                "src": "47:22:0"
            },
            {
                "absolutePath": "/E/Ludo/Documents/Developpement/BosonPool/tokenX-contract/contracts/ERC20Permit.sol",
                "file": "./ERC20Permit.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 90,
                "sourceUnit": 614,
                "src": "73:27:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
                "file": "@openzeppelin/contracts/access/AccessControl.sol",
                "id": 3,
                "nodeType": "ImportDirective",
                "scope": 90,
                "sourceUnit": 1087,
                "src": "102:58:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [{
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 4,
                            "name": "ERC20Permit",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 613,
                            "src": "187:11:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Permit_$613",
                                "typeString": "contract ERC20Permit"
                            }
                        },
                        "id": 5,
                        "nodeType": "InheritanceSpecifier",
                        "src": "187:11:0"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 6,
                            "name": "AccessControl",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1086,
                            "src": "200:13:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AccessControl_$1086",
                                "typeString": "contract AccessControl"
                            }
                        },
                        "id": 7,
                        "nodeType": "InheritanceSpecifier",
                        "src": "200:13:0"
                    }
                ],
                "contractDependencies": [
                    613,
                    746,
                    1086,
                    1760,
                    2344
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": true,
                "id": 89,
                "linearizedBaseContracts": [
                    89,
                    1086,
                    613,
                    2344,
                    1760,
                    746
                ],
                "name": "BosonToken",
                "nodeType": "ContractDefinition",
                "nodes": [{
                        "constant": true,
                        "functionSelector": "e63ab1e9",
                        "id": 12,
                        "mutability": "constant",
                        "name": "PAUSER_ROLE",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 89,
                        "src": "221:62:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                        },
                        "typeName": {
                            "id": 8,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "221:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        },
                        "value": {
                            "argumentTypes": null,
                            "arguments": [{
                                "argumentTypes": null,
                                "hexValue": "5041555345525f524f4c45",
                                "id": 10,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "269:13:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                                    "typeString": "literal_string \"PAUSER_ROLE\""
                                },
                                "value": "PAUSER_ROLE"
                            }],
                            "expression": {
                                "argumentTypes": [{
                                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                                    "typeString": "literal_string \"PAUSER_ROLE\""
                                }],
                                "id": 9,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "259:9:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                            },
                            "id": 11,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "259:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": true,
                        "id": 19,
                        "mutability": "constant",
                        "name": "ONE_MILLION",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 89,
                        "src": "290:48:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 13,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "290:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": {
                            "argumentTypes": null,
                            "commonType": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                            },
                            "id": 18,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 14,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "329:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                },
                                "value": "1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                },
                                "id": 17,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 15,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "333:2:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "36",
                                    "id": 16,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "337:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_6_by_1",
                                        "typeString": "int_const 6"
                                    },
                                    "value": "6"
                                },
                                "src": "333:5:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                }
                            },
                            "src": "329:9:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "body": {
                            "id": 53,
                            "nodeType": "Block",
                            "src": "496:178:0",
                            "statements": [{
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [{
                                                "argumentTypes": null,
                                                "id": 33,
                                                "name": "DEFAULT_ADMIN_ROLE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 829,
                                                "src": "518:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 34,
                                                    "name": "_msgSender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1748,
                                                    "src": "538:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                        "typeString": "function () view returns (address payable)"
                                                    }
                                                },
                                                "id": 35,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "538:12:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [{
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            ],
                                            "id": 32,
                                            "name": "_setupRole",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1012,
                                            "src": "507:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                                "typeString": "function (bytes32,address)"
                                            }
                                        },
                                        "id": 36,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "507:44:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 37,
                                    "nodeType": "ExpressionStatement",
                                    "src": "507:44:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [{
                                                "argumentTypes": null,
                                                "id": 39,
                                                "name": "PAUSER_ROLE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12,
                                                "src": "573:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 40,
                                                    "name": "_msgSender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1748,
                                                    "src": "586:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                        "typeString": "function () view returns (address payable)"
                                                    }
                                                },
                                                "id": 41,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "586:12:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [{
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            ],
                                            "id": 38,
                                            "name": "_setupRole",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1012,
                                            "src": "562:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                                "typeString": "function (bytes32,address)"
                                            }
                                        },
                                        "id": 42,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "562:37:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 43,
                                    "nodeType": "ExpressionStatement",
                                    "src": "562:37:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [{
                                                "argumentTypes": null,
                                                "id": 45,
                                                "name": "_initialTokenOwner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25,
                                                "src": "618:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 50,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 48,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "argumentTypes": null,
                                                        "hexValue": "323030",
                                                        "id": 46,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "638:3:0",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_200_by_1",
                                                            "typeString": "int_const 200"
                                                        },
                                                        "value": "200"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "*",
                                                    "rightExpression": {
                                                        "argumentTypes": null,
                                                        "id": 47,
                                                        "name": "ONE_MILLION",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 19,
                                                        "src": "644:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "638:17:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "31",
                                                    "id": 49,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "658:7:0",
                                                    "subdenomination": "ether",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                        "typeString": "int_const 1000000000000000000"
                                                    },
                                                    "value": "1"
                                                },
                                                "src": "638:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [{
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 44,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 269,
                                            "src": "612:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 51,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "612:54:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 52,
                                    "nodeType": "ExpressionStatement",
                                    "src": "612:54:0"
                                }
                            ]
                        },
                        "documentation": null,
                        "id": 54,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [{
                            "arguments": [{
                                    "argumentTypes": null,
                                    "id": 28,
                                    "name": "name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21,
                                    "src": "482:4:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                    }
                                },
                                {
                                    "argumentTypes": null,
                                    "id": 29,
                                    "name": "symbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23,
                                    "src": "488:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                    }
                                }
                            ],
                            "id": 30,
                            "modifierName": {
                                "argumentTypes": null,
                                "id": 27,
                                "name": "ERC20Permit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 613,
                                "src": "470:11:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20Permit_$613_$",
                                    "typeString": "type(contract ERC20Permit)"
                                }
                            },
                            "nodeType": "ModifierInvocation",
                            "src": "470:25:0"
                        }],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "overrides": null,
                        "parameters": {
                            "id": 26,
                            "nodeType": "ParameterList",
                            "parameters": [{
                                    "constant": false,
                                    "id": 21,
                                    "mutability": "mutable",
                                    "name": "name",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 54,
                                    "src": "369:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 20,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "369:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 23,
                                    "mutability": "mutable",
                                    "name": "symbol",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 54,
                                    "src": "398:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 22,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "398:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 25,
                                    "mutability": "mutable",
                                    "name": "_initialTokenOwner",
                                    "nodeType": "VariableDeclaration",
                                    "overrides": null,
                                    "scope": 54,
                                    "src": "429:26:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 24,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "429:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "358:104:0"
                        },
                        "returnParameters": {
                            "id": 31,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "496:0:0"
                        },
                        "scope": 89,
                        "src": "347:327:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 70,
                            "nodeType": "Block",
                            "src": "924:177:0",
                            "statements": [{
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [{
                                                "argumentTypes": null,
                                                "arguments": [{
                                                        "argumentTypes": null,
                                                        "id": 60,
                                                        "name": "PAUSER_ROLE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 12,
                                                        "src": "965:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 61,
                                                            "name": "_msgSender",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1748,
                                                            "src": "978:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                                "typeString": "function () view returns (address payable)"
                                                            }
                                                        },
                                                        "id": 62,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "978:12:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [{
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "id": 59,
                                                    "name": "hasRole",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 875,
                                                    "src": "957:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                                        "typeString": "function (bytes32,address) view returns (bool)"
                                                    }
                                                },
                                                "id": 63,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "957:34:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365",
                                                "id": 64,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1006:57:0",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
                                                    "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
                                                },
                                                "value": "ERC20PresetMinterPauser: must have pauser role to pause"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [{
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
                                                    "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
                                                }
                                            ],
                                            "id": 58,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [-18, -18],
                                            "referencedDeclaration": -18,
                                            "src": "935:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 65,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "935:139:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 66,
                                    "nodeType": "ExpressionStatement",
                                    "src": "935:139:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 67,
                                            "name": "_pause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2327,
                                            "src": "1085:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 68,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1085:8:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 69,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1085:8:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 55,
                            "nodeType": "StructuredDocumentation",
                            "src": "682:212:0",
                            "text": "@notice When Token contract is paused, no Token interactions are possible (e.g. approve, transfer, transferFrom or permit)\nRequirements:\n\n     * - Caller must have PAUSER_ROLE"
                        },
                        "functionSelector": "8456cb59",
                        "id": 71,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "pause",
                        "nodeType": "FunctionDefinition",
                        "overrides": null,
                        "parameters": {
                            "id": 56,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "914:2:0"
                        },
                        "returnParameters": {
                            "id": 57,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "924:0:0"
                        },
                        "scope": 89,
                        "src": "900:201:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 87,
                            "nodeType": "Block",
                            "src": "1359:181:0",
                            "statements": [{
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [{
                                                "argumentTypes": null,
                                                "arguments": [{
                                                        "argumentTypes": null,
                                                        "id": 77,
                                                        "name": "PAUSER_ROLE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 12,
                                                        "src": "1400:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 78,
                                                            "name": "_msgSender",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1748,
                                                            "src": "1413:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                                "typeString": "function () view returns (address payable)"
                                                            }
                                                        },
                                                        "id": 79,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1413:12:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [{
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "id": 76,
                                                    "name": "hasRole",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 875,
                                                    "src": "1392:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                                        "typeString": "function (bytes32,address) view returns (bool)"
                                                    }
                                                },
                                                "id": 80,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1392:34:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                                                "id": 81,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1441:59:0",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
                                                    "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
                                                },
                                                "value": "ERC20PresetMinterPauser: must have pauser role to unpause"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [{
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
                                                    "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
                                                }
                                            ],
                                            "id": 75,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [-18, -18],
                                            "referencedDeclaration": -18,
                                            "src": "1370:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 82,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1370:141:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 83,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1370:141:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 84,
                                            "name": "_unpause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2343,
                                            "src": "1522:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 85,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1522:10:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 86,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1522:10:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 72,
                            "nodeType": "StructuredDocumentation",
                            "src": "1109:218:0",
                            "text": "@notice When Token contract is unpaused, all Token interactions can be executed (e.g. approve, transfer, transferFrom or permit)\nRequirements:\n\n     * - Caller must have PAUSER_ROLE"
                        },
                        "functionSelector": "3f4ba83a",
                        "id": 88,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "unpause",
                        "nodeType": "FunctionDefinition",
                        "overrides": null,
                        "parameters": {
                            "id": 73,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1349:2:0"
                        },
                        "returnParameters": {
                            "id": 74,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1359:0:0"
                        },
                        "scope": 89,
                        "src": "1333:207:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 90,
                "src": "164:1379:0"
            }
        ],
        "src": "47:1498:0"
    },
    "compiler": {
        "name": "solc",
        "version": "0.6.6+commit.6c089d02.Emscripten.clang"
    },
    "networks": {
        "4": {
            "events": {
                "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
                    "anonymous": false,
                    "inputs": [{
                            "indexed": true,
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "name": "Approval",
                    "type": "event",
                    "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
                },
                "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
                    "anonymous": false,
                    "inputs": [{
                        "indexed": false,
                        "internalType": "address",
                        "name": "account",
                        "type": "address"
                    }],
                    "name": "Paused",
                    "type": "event",
                    "signature": "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258"
                },
                "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
                    "anonymous": false,
                    "inputs": [{
                            "indexed": true,
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "indexed": true,
                            "internalType": "bytes32",
                            "name": "previousAdminRole",
                            "type": "bytes32"
                        },
                        {
                            "indexed": true,
                            "internalType": "bytes32",
                            "name": "newAdminRole",
                            "type": "bytes32"
                        }
                    ],
                    "name": "RoleAdminChanged",
                    "type": "event",
                    "signature": "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff"
                },
                "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
                    "anonymous": false,
                    "inputs": [{
                            "indexed": true,
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        }
                    ],
                    "name": "RoleGranted",
                    "type": "event",
                    "signature": "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d"
                },
                "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
                    "anonymous": false,
                    "inputs": [{
                            "indexed": true,
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        }
                    ],
                    "name": "RoleRevoked",
                    "type": "event",
                    "signature": "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b"
                },
                "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
                    "anonymous": false,
                    "inputs": [{
                            "indexed": true,
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "name": "Transfer",
                    "type": "event",
                    "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
                },
                "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
                    "anonymous": false,
                    "inputs": [{
                        "indexed": false,
                        "internalType": "address",
                        "name": "account",
                        "type": "address"
                    }],
                    "name": "Unpaused",
                    "type": "event",
                    "signature": "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa"
                }
            },
            "links": {},
            "address": "0x200E5295fEC37B4410E6688a94de22C9d4C6DDbb",
            "transactionHash": "0x3c19301bebca08840ded4cf76ad49165bacd3e08cc1c62ed0c97e6e37c38326f"
        },
        "5777": {
            "events": {
                "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
                    "anonymous": false,
                    "inputs": [{
                            "indexed": true,
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "name": "Approval",
                    "type": "event",
                    "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
                },
                "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
                    "anonymous": false,
                    "inputs": [{
                        "indexed": false,
                        "internalType": "address",
                        "name": "account",
                        "type": "address"
                    }],
                    "name": "Paused",
                    "type": "event",
                    "signature": "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258"
                },
                "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
                    "anonymous": false,
                    "inputs": [{
                            "indexed": true,
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "indexed": true,
                            "internalType": "bytes32",
                            "name": "previousAdminRole",
                            "type": "bytes32"
                        },
                        {
                            "indexed": true,
                            "internalType": "bytes32",
                            "name": "newAdminRole",
                            "type": "bytes32"
                        }
                    ],
                    "name": "RoleAdminChanged",
                    "type": "event",
                    "signature": "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff"
                },
                "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
                    "anonymous": false,
                    "inputs": [{
                            "indexed": true,
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        }
                    ],
                    "name": "RoleGranted",
                    "type": "event",
                    "signature": "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d"
                },
                "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
                    "anonymous": false,
                    "inputs": [{
                            "indexed": true,
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        }
                    ],
                    "name": "RoleRevoked",
                    "type": "event",
                    "signature": "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b"
                },
                "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
                    "anonymous": false,
                    "inputs": [{
                            "indexed": true,
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "name": "Transfer",
                    "type": "event",
                    "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
                },
                "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
                    "anonymous": false,
                    "inputs": [{
                        "indexed": false,
                        "internalType": "address",
                        "name": "account",
                        "type": "address"
                    }],
                    "name": "Unpaused",
                    "type": "event",
                    "signature": "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa"
                }
            },
            "links": {},
            "address": "0x684F621eFf28DEdBa7819280063653ff933f5CC0",
            "transactionHash": "0x7731895208f0dfcc5b1e556dd2ef6d3b853478e9fd528d1c0e2d7c14fe3d2437"
        }
    },
    "schemaVersion": "3.0.22",
    "updatedAt": "2021-03-20T16:54:37.565Z",
    "networkType": "ethereum",
    "devdoc": {
        "methods": {
            "approve(address,uint256)": {
                "details": "Sets `value` as the allowance of `spender` over the caller's tokens.      * Returns a boolean value indicating whether the operation succeeded.      * Emits an {Approval} event."
            },
            "decreaseAllowance(address,uint256)": {
                "details": "Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems related to race condition      * Emits an {Approval} event indicating the updated allowance."
            },
            "getRoleAdmin(bytes32)": {
                "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
            },
            "getRoleMember(bytes32,uint256)": {
                "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
            },
            "getRoleMemberCount(bytes32)": {
                "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
            },
            "grantRole(bytes32,address)": {
                "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
            },
            "hasRole(bytes32,address)": {
                "details": "Returns `true` if `account` has been granted `role`."
            },
            "increaseAllowance(address,uint256)": {
                "details": "Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems related to race condition      * Emits an {Approval} event indicating the updated allowance."
            },
            "paused()": {
                "details": "Returns true if the contract is paused, and false otherwise."
            },
            "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
                "details": "Sets `value` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval.      * Emits an {Approval} event.      * Requirements:      * - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}).      * For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
            },
            "renounceRole(bytes32,address)": {
                "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
            },
            "revokeRole(bytes32,address)": {
                "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
            },
            "transfer(address,uint256)": {
                "details": "Moves `value` tokens from the caller's account to `recipient`.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event."
            },
            "transferFrom(address,address,uint256)": {
                "details": "Moves `value` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event."
            }
        }
    },
    "userdoc": {
        "methods": {
            "pause()": {
                "notice": "When Token contract is paused, no Token interactions are possible (e.g. approve, transfer, transferFrom or permit) Requirements:      * - Caller must have PAUSER_ROLE"
            },
            "unpause()": {
                "notice": "When Token contract is unpaused, all Token interactions can be executed (e.g. approve, transfer, transferFrom or permit) Requirements:      * - Caller must have PAUSER_ROLE"
            }
        }
    }
}